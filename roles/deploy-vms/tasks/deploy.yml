---
- name: Deploy VMs
  proxmox_kvm_vtluug:
    api_user: root@pam
    api_password: "{{ lookup('env', 'PROXMOX_PASSWORD') }}"
    api_host: meltdown.private.vtluug.org
    node: "{{ item.node }}"
    target: "{{ item.target }}"
    clone: "{{ item.clone }}"
    name: "{{ item.name }}"
    full: yes
    storage: temp-images
    timeout: 500
  with_items: "{{ new_vms }}"
  register: vminfo
  run_once: true

- name: Pause a bit since a bunch of VMs were just created
  pause:
    seconds: 60
  run_once: true


- name: Start recently created VMs
  proxmox_kvm_vtluug:
    api_user: root@pam
    api_password: "{{ lookup('env', 'PROXMOX_PASSWORD') }}"
    api_host: meltdown.private.vtluug.org
    node: "{{ item.item.target }}"
    name: "{{ item.item.name }}"
    state: started
  with_items: "{{ vminfo.results }}"
  when: item.changed == True
  run_once: true

- name: Wait for VMs to start (+ a reboot for new machine-id to take effectr; and centos can take a looong time)
  pause:
    minutes: 5
  run_once: true

- name: Scan for new dhcp IPs in 10.98.1.0/24
  shell: |
    nmap -sn 10.98.1.0/24 > /tmp/new_vms

# This clusterfuck looks up each MAC based on VM name, then uses the nmap scan to get IP
- name: Get new VM IPs
  shell: |
    cat /tmp/new_vms | grep -B 2 $(cat /etc/pve/nodes/{{ item.item.target }}/qemu-server/{{ item.newid }}.conf | grep -oE '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}') | grep -oE '10.98.1.[0-9]{1,3}'
  register: ipinfo
  with_items: "{{ vminfo.results }}"
  when: item.changed == True
  run_once: true

- name: Add newly created VMs to group
  add_host:
    name: "{{ item.stdout }}"
    groups: new_vms
    vm_name: "{{ item.item.item.name }}"
    vm_ip: "{{ item.item.item.ip }}"
    vm_clone: "{{ item.item.item.clone }}"
  with_items: "{{ ipinfo.results }}"
  when: item.changed == True
  run_once: true
